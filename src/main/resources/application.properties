spring.application.name=Auth2
#spring.datasource.url=jdbc:mysql://localhost:3306/practice
spring.jpa.properties.hibernate.default_schema=public
#spring.datasource.url=jdbc:mysql://google/instance-name?cloudSqlInstance=project-id:region:instance-id&socketFactory=com.google.cloud.sql.mysql.SocketFactory
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
server.servlet.context-path=/myapp-oAuth
server.port=8080
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
#spring.jpa.open-in-view=false


#GCP
#spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.database-name=practice
spring.cloud.gcp.sql.instance-connection-name=project-id:region:instance-id
spring.cloud.gcp.sql.ip-types=PUBLIC

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


springdoc.api-docs.title=OAuth2.0
springdoc.api-docs.description=Spring Security
springdoc.api-docs.version=OPENAPI_3_0
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.use-root-path=true
springdoc.swagger-ui.oauth.useBasicAuthentication.WithAccessCodeGrant=true
springdoc.api-docs.jwt.enabled=true

# Azure AD Configuration
spring.security.oauth2.client.registration.azure.client-id=<client-Id>
spring.security.oauth2.client.registration.azure.client-secret=<client-secret>
spring.security.oauth2.client.registration.azure.scope=https://graph.microsoft.com/.default
spring.security.oauth2.client.registration.azure.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.azure.redirect-uri=http://localhost:8085/myapp-oAuth/swagger-ui/oauth2-redirect.html
spring.security.oauth2.client.registration.azure.authorization-uri=https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/authorize
spring.security.oauth2.client.registration.azure.token-uri=https://login.microsoftonline.com/<tenant-id>/oauth2/token
spring.security.oauth2.client.registration.azure.user-info-uri=https://graph.microsoft.com/v1.0/me
spring.security.oauth2.client.registration.azure.jwk-set-uri=https://login.microsoftonline.com/<tenant-id>/discovery/v2.0/keys
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/<tenant-id>/discovery/v2.0/keys
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://sts.windows.net/<tenant-id>/
spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://login.microsoftonline.com/<tenant-id>/discovery/v2.0/keys
spring.security.oauth2.resourceserver.jwt.provider.azure.issuer-uri=https://login.microsoftonline.com/<tenant-id>/v2.0


logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.jwt=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate.SQL=DEBUG


#rate limiter config
resilience4j.ratelimiter.instances.myRateLimiter.limit-for-period=100
resilience4j.ratelimiter.instances.myRateLimiter.limit-refresh-period=600s
resilience4j.ratelimiter.instances.myRateLimiter.timeout-duration=1s

#custom redis rate limiter config
redis.requestLimit=2
redis.timeLimit=60

#redis config
#spring.redis.host=localhost
#spring.redis.port=6379

# Sliding window size in number of calls
resilience4j.circuitbreaker.instances.tokenCircuitBreaker.slidingWindowSize=100
# Failure rate threshold
resilience4j.circuitbreaker.instances.tokenCircuitBreaker.failureRateThreshold=50
# Wait duration in open state to 10 mins
resilience4j.circuitbreaker.instances.tokenCircuitBreaker.waitDurationInOpenState=60000


#spring.datasource.hikari.minimum-idle=10
#spring.datasource.hikari.maximum-pool-size=100
#spring.datasource.hikari.idle-timeout=250000
#spring.datasource.hikari.max-lifetime=1730000

